{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madha\\\\project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const socket = io(\"http://localhost:5000\");\n  // Fetch messages from backend\n  const fetchMessages = () => {\n    axios.get(\"http://localhost:5000/webhook/messages\").then(res => setChats(res.data)).catch(err => console.error(\"Failed to fetch:\", err));\n  };\n  useEffect(() => {\n    fetchMessages();\n    socket.on(\"new_message\", msg => {\n      setChats(prevChats => {\n        const updated = [...prevChats];\n        const existingChat = updated.find(c => c.wa_id === msg.wa_id);\n        if (existingChat) {\n          existingChat.messages.push(msg);\n        } else {\n          updated.push({\n            wa_id: msg.wa_id,\n            name: msg.name,\n            number: msg.number,\n            messages: [msg]\n          });\n        }\n        return [...updated];\n      });\n    });\n    socket.on(\"status_updated\", updatedMsg => {\n      setChats(prevChats => {\n        return prevChats.map(chat => {\n          if (chat.wa_id === updatedMsg.wa_id) {\n            chat.messages = chat.messages.map(msg => msg.meta_msg_id === updatedMsg.meta_msg_id ? updatedMsg : msg);\n          }\n          return chat;\n        });\n      });\n    });\n    return () => {\n      socket.off(\"new_message\");\n      socket.off(\"status_updated\");\n    };\n  }, []);\n\n  // Handle send message\n  const handleSend = async () => {\n    if (!newMessage || !selectedChat) return;\n    const payload = {\n      type: \"message\",\n      wa_id: selectedChat.wa_id,\n      name: selectedChat.name,\n      number: selectedChat.number,\n      message: newMessage,\n      timestamp: new Date().toISOString(),\n      meta_msg_id: \"msg_\" + Date.now()\n    };\n    try {\n      await axios.post(\"http://localhost:5000/webhook/receive\", payload);\n      setNewMessage(\"\");\n      fetchMessages(); // Refresh chat\n    } catch (error) {\n      console.error(\"Send error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"30%\",\n        borderRight: \"1px solid #ccc\",\n        overflowY: \"auto\"\n      },\n      children: chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setSelectedChat(chat),\n        style: {\n          padding: \"10px\",\n          cursor: \"pointer\",\n          background: (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.wa_id) === chat.wa_id ? \"#f0f0f0\" : \"\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: chat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), \" (\", chat.number, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"70%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            overflowY: \"auto\",\n            padding: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ChatWindow, {\n            chat: selectedChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"10px\",\n            borderTop: \"1px solid #ccc\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            style: {\n              width: \"80%\",\n              padding: \"10px\"\n            },\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            style: {\n              padding: \"10px 20px\",\n              marginLeft: \"10px\"\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          padding: \"20px\"\n        },\n        children: \"Select a chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7dQTck5N2ts9h23EKuBhUj5XXLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","ChatWindow","io","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","chats","setChats","selectedChat","setSelectedChat","newMessage","setNewMessage","socket","fetchMessages","get","then","res","data","catch","err","console","error","on","msg","prevChats","updated","existingChat","find","c","wa_id","messages","push","name","number","updatedMsg","map","chat","meta_msg_id","off","handleSend","payload","type","message","timestamp","Date","toISOString","now","post","style","display","height","children","width","borderRight","overflowY","index","onClick","padding","cursor","background","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","flex","borderTop","value","onChange","e","target","placeholder","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/madha/project/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport {io} from \"socket.io-client\";\nfunction App() {\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const socket = io(\"http://localhost:5000\");\n  // Fetch messages from backend\n  const fetchMessages = () => {\n    axios.get(\"http://localhost:5000/webhook/messages\")\n      .then((res) => setChats(res.data))\n      .catch((err) => console.error(\"Failed to fetch:\", err));\n  };\n\n  useEffect(() => {\n  fetchMessages();\n\n  socket.on(\"new_message\", (msg) => {\n    setChats((prevChats) => {\n      const updated = [...prevChats];\n      const existingChat = updated.find(c => c.wa_id === msg.wa_id);\n\n      if (existingChat) {\n        existingChat.messages.push(msg);\n      } else {\n        updated.push({\n          wa_id: msg.wa_id,\n          name: msg.name,\n          number: msg.number,\n          messages: [msg]\n        });\n      }\n\n      return [...updated];\n    });\n  });\n\n  socket.on(\"status_updated\", (updatedMsg) => {\n    setChats((prevChats) => {\n      return prevChats.map(chat => {\n        if (chat.wa_id === updatedMsg.wa_id) {\n          chat.messages = chat.messages.map(msg =>\n            msg.meta_msg_id === updatedMsg.meta_msg_id ? updatedMsg : msg\n          );\n        }\n        return chat;\n      });\n    });\n  });\n\n  return () => {\n    socket.off(\"new_message\");\n    socket.off(\"status_updated\");\n  };\n}, []);\n\n\n  // Handle send message\n  const handleSend = async () => {\n    if (!newMessage || !selectedChat) return;\n\n    const payload = {\n      type: \"message\",\n      wa_id: selectedChat.wa_id,\n      name: selectedChat.name,\n      number: selectedChat.number,\n      message: newMessage,\n      timestamp: new Date().toISOString(),\n      meta_msg_id: \"msg_\" + Date.now()\n    };\n\n    try {\n      await axios.post(\"http://localhost:5000/webhook/receive\", payload);\n      setNewMessage(\"\");\n      fetchMessages(); // Refresh chat\n    } catch (error) {\n      console.error(\"Send error:\", error);\n    }\n  };\n\n  return (\n    <div style={{ display: \"flex\", height: \"100vh\" }}>\n      {/* Sidebar */}\n      <div style={{ width: \"30%\", borderRight: \"1px solid #ccc\", overflowY: \"auto\" }}>\n        {chats.map((chat, index) => (\n          <div key={index} onClick={() => setSelectedChat(chat)} style={{ padding: \"10px\", cursor: \"pointer\", background: selectedChat?.wa_id === chat.wa_id ? \"#f0f0f0\" : \"\" }}>\n            <strong>{chat.name}</strong> ({chat.number})\n          </div>\n        ))}\n      </div>\n\n      {/* Chat Window */}\n      <div style={{ width: \"70%\", display: \"flex\", flexDirection: \"column\" }}>\n        {selectedChat ? (\n          <>\n            <div style={{ flex: 1, overflowY: \"auto\", padding: \"20px\" }}>\n              <ChatWindow chat={selectedChat} />\n            </div>\n\n            <div style={{ padding: \"10px\", borderTop: \"1px solid #ccc\" }}>\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                style={{ width: \"80%\", padding: \"10px\" }}\n                placeholder=\"Type your message...\"\n              />\n              <button onClick={handleSend} style={{ padding: \"10px 20px\", marginLeft: \"10px\" }}>\n                Send\n              </button>\n            </div>\n          </>\n        ) : (\n          <p style={{ padding: \"20px\" }}>Select a chat</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}