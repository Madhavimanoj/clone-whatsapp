{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madha\\\\project\\\\mini-linkedin-community-frontend\\\\src\\\\components\\\\PostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostFeed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [text, setText] = useState('');\n  const fetchPosts = async () => {\n    const res = await axios.get('http://localhost:5000/api/posts');\n    setPosts(res.data);\n  };\n  const createPost = async () => {\n    await axios.post('http://localhost:5000/api/posts', {\n      text\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    setText('');\n    fetchPosts();\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Write something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createPost,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: post.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this), \" \\u2022 \", new Date(post.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PostFeed, \"aOzQk3sAb5Czk0f+6pXpwtIWYv4=\");\n_c = PostFeed;\nexport default PostFeed;\nvar _c;\n$RefreshReg$(_c, \"PostFeed\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PostFeed","_s","posts","setPosts","text","setText","fetchPosts","res","get","data","createPost","post","headers","Authorization","localStorage","getItem","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","author","name","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/madha/project/mini-linkedin-community-frontend/src/components/PostFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PostFeed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [text, setText] = useState('');\r\n\r\n  const fetchPosts = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/posts');\r\n    setPosts(res.data);\r\n  };\r\n\r\n  const createPost = async () => {\r\n    await axios.post('http://localhost:5000/api/posts', { text }, {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n    });\r\n    setText('');\r\n    fetchPosts();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <textarea value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Write something...\" />\r\n      <button onClick={createPost}>Post</button>\r\n      {posts.map((post) => (\r\n        <div key={post._id}>\r\n          <p><strong>{post.author.name}</strong> â€¢ {new Date(post.createdAt).toLocaleString()}</p>\r\n          <p>{post.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;IAC9DL,QAAQ,CAACI,GAAG,CAACE,IAAI,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMb,KAAK,CAACc,IAAI,CAAC,iCAAiC,EAAE;MAAEP;IAAK,CAAC,EAAE;MAC5DQ,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAAG;IACtE,CAAC,CAAC;IACFV,OAAO,CAAC,EAAE,CAAC;IACXC,UAAU,CAAC,CAAC;EACd,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAUkB,KAAK,EAAEb,IAAK;MAACc,QAAQ,EAAGC,CAAC,IAAKd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpG1B,OAAA;MAAQ2B,OAAO,EAAEhB,UAAW;MAAAM,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCvB,KAAK,CAACyB,GAAG,CAAEhB,IAAI,iBACdZ,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,gBAAGjB,OAAA;UAAAiB,QAAA,EAASL,IAAI,CAACiB,MAAM,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,YAAG,EAAC,IAAIK,IAAI,CAACnB,IAAI,CAACoB,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxF1B,OAAA;QAAAiB,QAAA,EAAIL,IAAI,CAACP;MAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFVd,IAAI,CAACsB,GAAG;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CAjCID,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}